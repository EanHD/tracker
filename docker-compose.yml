version: '3.8'

services:
  # Daily Tracker API Service
  tracker-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tracker-api
    restart: unless-stopped
    ports:
      - "5703:5703"
    environment:
      # Application settings
      - DATABASE_URL=sqlite:////home/tracker/.config/tracker/tracker.db
      - PYTHONUNBUFFERED=1
      
      # AI Provider Configuration (set these in .env file)
      - AI_PROVIDER=${AI_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-5-sonnet-20241022}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-}
      - LOCAL_BASE_URL=${LOCAL_BASE_URL:-}
      - LOCAL_MODEL=${LOCAL_MODEL:-}
      
      # Security
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-me-in-production}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_DAYS=${JWT_EXPIRATION_DAYS:-90}
    
    volumes:
      # Persist database
      - tracker-data:/home/tracker/.config/tracker
      
      # Mount logs (optional)
      - ./logs:/app/logs
    
    networks:
      - tracker-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5703/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    labels:
      - "com.tracker.service=api"
      - "com.tracker.version=1.0.0"

  # Nginx Reverse Proxy (optional, for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: tracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - tracker-api
    networks:
      - tracker-network
    labels:
      - "com.tracker.service=proxy"

volumes:
  # Named volume for persistent data
  tracker-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind

networks:
  tracker-network:
    driver: bridge
