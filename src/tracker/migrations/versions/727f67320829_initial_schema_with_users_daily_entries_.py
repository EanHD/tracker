"""Initial schema with users, daily_entries, ai_feedback, and conversation_logs

Revision ID: 727f67320829
Revises: 
Create Date: 2025-10-21 19:09:28.605812

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '727f67320829'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('api_key_hash', sa.String(length=255), nullable=True),
    sa.Column('settings', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_api_key_hash'), 'users', ['api_key_hash'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('daily_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('cash_on_hand_encrypted', sa.Text(), nullable=True),
    sa.Column('bank_balance_encrypted', sa.Text(), nullable=True),
    sa.Column('income_today', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('bills_due_today', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('debts_total_encrypted', sa.Text(), nullable=True),
    sa.Column('hours_worked', sa.Numeric(precision=4, scale=1), nullable=False),
    sa.Column('side_income', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('food_spent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('gas_spent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=False),
    sa.Column('priority', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('hours_worked >= 0 AND hours_worked <= 24', name='check_hours_worked'),
    sa.CheckConstraint('stress_level >= 1 AND stress_level <= 10', name='check_stress_level'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='uix_user_date')
    )
    op.create_index(op.f('ix_daily_entries_created_at'), 'daily_entries', ['created_at'], unique=False)
    op.create_index(op.f('ix_daily_entries_date'), 'daily_entries', ['date'], unique=False)
    op.create_index('ix_daily_entries_user_date', 'daily_entries', ['user_id', 'date'], unique=False)
    op.create_index(op.f('ix_daily_entries_user_id'), 'daily_entries', ['user_id'], unique=False)
    op.create_table('ai_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed', name='feedback_status'), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('generation_time', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('generation_time >= 0', name='check_generation_time'),
    sa.CheckConstraint('tokens_used >= 0', name='check_tokens_used'),
    sa.ForeignKeyConstraint(['entry_id'], ['daily_entries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_feedback_created_at'), 'ai_feedback', ['created_at'], unique=False)
    op.create_index(op.f('ix_ai_feedback_entry_id'), 'ai_feedback', ['entry_id'], unique=True)
    op.create_index(op.f('ix_ai_feedback_status'), 'ai_feedback', ['status'], unique=False)
    op.create_table('conversation_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('system', 'user', 'assistant', name='message_role'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['feedback_id'], ['ai_feedback.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_logs_feedback_id'), 'conversation_logs', ['feedback_id'], unique=False)
    op.create_index('ix_conversation_logs_feedback_timestamp', 'conversation_logs', ['feedback_id', 'timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_conversation_logs_feedback_timestamp', table_name='conversation_logs')
    op.drop_index(op.f('ix_conversation_logs_feedback_id'), table_name='conversation_logs')
    op.drop_table('conversation_logs')
    op.drop_index(op.f('ix_ai_feedback_status'), table_name='ai_feedback')
    op.drop_index(op.f('ix_ai_feedback_entry_id'), table_name='ai_feedback')
    op.drop_index(op.f('ix_ai_feedback_created_at'), table_name='ai_feedback')
    op.drop_table('ai_feedback')
    op.drop_index(op.f('ix_daily_entries_user_id'), table_name='daily_entries')
    op.drop_index('ix_daily_entries_user_date', table_name='daily_entries')
    op.drop_index(op.f('ix_daily_entries_date'), table_name='daily_entries')
    op.drop_index(op.f('ix_daily_entries_created_at'), table_name='daily_entries')
    op.drop_table('daily_entries')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_api_key_hash'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
